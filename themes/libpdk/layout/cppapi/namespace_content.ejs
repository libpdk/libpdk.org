<%
let namespace = page.namespace;
let npaths = [];
let namespaces = page.namespaces;
let parent = namespaces[namespace.parent];
while(parent) {
    let parts = parent.name.split("::");
    npaths.unshift({
        name: parts.pop(),
        url: url_for_api_entity(parent.refid)
    });
    parent = namespaces[parent.parent];
}
let catalog = get_site_data('cppapi/catalog');
let namespaceIndex = catalog.cppapinamespaces;
npaths.unshift({
    name: namespaceIndex.name,
    url: url_for(namespaceIndex.url)
});

namespace.namespaces.map(function(namespace){
    namespace.url = url_for_api_entity(namespace.refid);
});

namespace.enums.map(function(enumitem){
    enumitem.url = url_for_entity_detail(enumitem.containerId, enumitem.id);
});
namespace.npaths = npaths;
%>

<div id="container" style="width: 100%">
    <div class="uk-container uk-margin-small-top uk-margin-small-bottom cppapidoc-page-container cppapidoc-namespace-content-page">
        <div class="cppapidoc-container uk-flex uk-flex-left">
            <div class="side-panel-container uk-visible@m">
                <%- partial("_partial/cppapi/sidepanel") %>
            </div>
            <div class="uk-width-expand cppapidoc-info-container cppapidoc-namespace-content-info-container">
                <% if (namespace.npaths) { %>
                <%- partial("_partial/cppapi/path", {
                    pathList: namespace.npaths
                }) %>
                <% } %>
                <h3 class="title uk-text-break"><%- namespace.name %></h3>
                <% if (namespace.briefDescription.trim() != "") { %>
                <div class="uk-text-small uk-text-break uk-margin-small-bottom uk-margin-small-top">
                    <%- namespace.briefDescription.trim() %>
                </div>
                <% } %>

                <% if (namespace.detailDescription.trim() != "") { %>
                <div class="uk-text-small uk-text-break uk-margin-small-bottom uk-margin-small-top">
                    <%- namespace.detailDescription.trim() %>
                </div>
                <% } %>
                <%- partial("_partial/cppapi/namespace_section", {
                    namespaces: namespace.namespaces,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/class_section", {
                    classes: namespace.classes,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/typedef_section", {
                    typedefs: namespace.typedefs,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/enum_section", {
                    enums: namespace.enums,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/function_section", {
                    funcs: namespace.funcs,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/variable_section", {
                    variables: namespace.variables,
                    showSimpleName: true
                }) %>
                <%- partial("_partial/cppapi/typedef_info_section", {
                    typedefs: namespace.typedefs,
                    containerId: namespace.refid
                }) %>
                <%- partial("_partial/cppapi/enum_info_section", {
                    enums: namespace.enums,
                    containerId: namespace.refid
                }) %>
                <%- partial("_partial/cppapi/function_info_section", {
                    funcs: namespace.funcs,
                    containerId: namespace.refid
                }) %>
                <%- partial("_partial/cppapi/variable_info_section", {
                    variables: namespace.variables,
                    containerId: namespace.refid
                }) %>
                <div class="doxygen-info">generated by Doxygen: <%- get_doxygen_version() %></div>
            </div>
        </div>
    </div>
</div>
<script>
   $(document).ready(function ()
   {
      if (location.hash.trim().length > 0) {
         var target = $(location.hash);
         if (target.length > 0) {
            $('html,body')
            .stop()
            .animate({scrollTop: Math.round($(location.hash).offset().top)}, 0);
         }
      }
      $(".page-scroll-trigger").each(function(){
         var targetUrl = $(this).attr('href');
         var parts = targetUrl.split('#');
         if (parts) {
            targetUrl = parts[0];
         }
         if (targetUrl == location.pathname) {
            UIkit.scroll(this);
            $(this).on('scrolled', function () {
               location.hash = parts[1];
            });
         }
      });
      $(".detail-description table").each(function ()
      {
         $(this).addClass("uk-table uk-table-divider uk-table-small uk-table-striped");
      });
   });
</script>